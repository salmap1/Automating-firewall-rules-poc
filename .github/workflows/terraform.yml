name: 'Terraform with PR and Validation for Security Rules'

on:
  push:
    branches:
      - "ip"
      - "noc"
      - "main"
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  create-pr:
    if: github.ref == 'refs/heads/ip' || github.ref == 'refs/heads/noc'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Changed Files
        id: changes
        run: |
          git fetch origin
          changed_files=$(git diff-tree --no-commit-id --name-only -r HEAD | tr '\n' ',' | sed 's/,$//')
          echo "Changed files in this commit: $changed_files"
          echo "CHANGED_FILES=$changed_files" >> $GITHUB_ENV
          if [[ "$changed_files" != *"security_rules.json"* ]]; then
            echo "No relevant changes in security_rules.json. Skipping PR creation."
            exit 0
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          title: "Automated PR for Security Rules Change in ${{ github.ref_name }}"
          body: "Auto-generated PR to merge changes in security_rules.json from ${{ github.ref_name }} to main."
          labels: "team-${{ github.ref_name }}"

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: create-pr
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Validate Security Rules Changes
        if: contains(steps.changes.outputs.CHANGED_FILES, 'security_rules.json')
        run: python validate_firewall_changes.py teams/${{ github.ref_name }}/security_rules.json

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env:
          PALO_ALTO_HOSTNAME: ${{ secrets.PALO_ALTO_HOSTNAME }}
          PALO_ALTO_USERNAME: ${{ secrets.PALO_ALTO_USERNAME }}
          PALO_ALTO_PASSWORD: ${{ secrets.PALO_ALTO_PASSWORD }}

